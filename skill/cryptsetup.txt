# 如何创建加密

cryptsetup luksFormat /dev/sda1
# 会提示输入密码

---


0. 检测是否某个密码有效，也可以使用 cryptsetup open --test-passphrase 来测试

echo "your_password" | cryptsetup open --test-passphrase /dev/your_device

1. 修改密码

sudo cryptsetup --verbose --test-passphrase open /dev/sda3

成功返当前输入的密码在哪个slot:
Enter passphrase for /dev/sda3: 
Key slot 0 unlocked.
Command successful.

2. 修改指定slot 位的密码:
sudo cryptsetup -S 0 luksChangeKey /dev/sda3 

成功会返回:
Enter passphrase to be changed:
Enter new passphrase:
Verify passphrase:


## 假设你想让新密码放在 slot 0

- 1. 先删除 slot 0（需要其他 slot 的密码授权）

sudo cryptsetup luksKillSlot /dev/your_device 0

- 2. 立即添加新密码，并指定它使用 slot 0

sudo cryptsetup luksAddKey --key-slot 0 /dev/your_device


# GRUB 使用 cryptoumount -k <keyfile> 文件解密时很慢，所有可以使用专用的一个低强度 slot：

- 添加一个新密码（或密钥文件）到 slot 4，使用低迭代次数

```shell
sudo cryptsetup luksAddKey --key-slot 4 --pbkdf-force-iterations 10000 /dev/nvme0n1p5
这样 GRUB 解锁只需 ~0.1 秒（而非 10 秒）。
其他 slot 仍保持高强度用于日常登录。
```

