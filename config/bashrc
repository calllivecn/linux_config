# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000
HISTTIMEFORMAT="%Y-%m-%d-%T "
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -lFh --time-style=long-iso'
alias lla='ls -AlFh --time-style=long-iso'
alias la='ls -AF'
alias l='ls -CF'

#########

# ZhangXu Sun Dec 27 00:30:18 CST 2015

#########


alias ..='cd ..'
alias j='jobs -l'
alias d='date +%F-%u-%R'
alias top='top -d 1'
alias temp='watch -n 1 sensors'

# systemctl alias
alias scl='sudo systemctl'
alias scls='scl status'
alias jl='journalctl -o short-iso'
alias jlu='jl --user'
alias scu='systemctl --user'

alias ls='ls --color=auto'
alias ll='ls -lFh --time-style=long-iso'
alias lla='ls -AlFh --time-style=long-iso'
alias la='ls -AF'
alias l='ls -CF'

alias nvideo='nvidia-smi -l 1 -q -d UTILIZATION'

alias grep='grep --color=auto'

alias ip='ip -c'

recode(){
	local ok='☺ ' err='☹ ' prompt='☘ ' returncode
	if [ $1 -eq 0 ];then
		returncode="$ok"
	else
		returncode="$err"
	fi
	echo "$returncode"
}

#PS1='${?:NO}-\u@\h:\W\$ '
#PS1='\[\033[01;32m\]$(recode $?)-\u@\h\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]☘ '
PS1='$(recode $?)-\u@\h:\W☘ '

p(){ ps -ef |grep -v grep |grep "$1"; }

pu(){ ps aux |awk '{if($5 != 0) print $0}'; }

pk(){ ps aux |awk '{if($5 == 0) print $0}'; }

mcd(){ mkdir -p "$1" && cd "$1"; }

cls(){ cd "$1" && ls -CF; }

bak(){ cp "$1"{,.bak}; }

mbak(){ mv "$1"{,.bak}; }

ubak(){ mv "$1" ${1%.bak}; }

hp(){ history |grep "$1"; }

duh(){ du -xmd 1 |sort -k 1 -nr |head -n 20; }

dfh(){ df -lh |grep '^/' |sort -k 1; }

mem(){ free -mhlt; }

listen(){ lsof -P -i -n; }

port(){ ss -tulanp |column -t; }

cpsync(){ cp "$1" "$2" && sync -d "$2"; }

weather(){ wget -qO- https://wttr.in; }

psmem() {
	if type -p ps_mem >/dev/null 2>&1;then
		ps_mem -p $(pgrep -d, "$1")
	else
		echo "请安装：pip3 install ps-mem"
	fi
}

bcl(){
	if [ -n "$1" ];then
		echo "$1" |bc -l
	else
		echo "Using: bcl <expr>"
	fi
}

io(){ iostat -m 1; }

iop(){ pidstat --human -d 1; }

cpufreq(){
	watch -n 1 'grep "cpu MHz" /proc/cpuinfo'
}

battery(){
	upower -i $(upower -e |grep BAT)
}

tmuxnew(){
	tmux new -s "$(hostname)"
}

wifi(){
nmcli device wifi rescan
sleep 0.5
nmcli device wifi list
}

xiyou(){
	local proxy conf

	if [ "$1"x != x ];then
		conf="$HOME/.config/xiyou-${1}"
		if [ ! -r "$conf" ];then
			echo "没有找到${conf}"
			return
		fi
	else
		conf="$HOME/.config/xiyou"
	fi

	proxy="$(grep -oP '(?<=http_proxy=")(.*)(?=")' ${conf})"
	
	set -x
	if [ -n "$http_proxy" ];then
		unset http_proxy
	else
		export http_proxy="$proxy"
	fi
	if [ -n "$https_proxy" ];then
		unset https_proxy
	else
		export https_proxy="$proxy"
	fi
	set +x
}


#校验合函数生成
for hashsum in md5sum sha1sum sha224dum sha256sum sha384sum sha512sum
do
	eval "${hashsum%sum}check"'(){ '"$hashsum"' "$1" | grep -i "$2" ; }'
done
unset hashsum


###  define fbterm
if [ "$TERM"x == "linux"x ];then
	alias fbterm='LANG=zh_CN.UTF-8 fbterm'
fi

# uv venv 环境
#if [ -f ~/.venv/uv-py313/bin/activate ];then
#	. ~/.venv/uv-py313/bin/activate
#fi

alias ffmpeg='ffmpeg -hide_banner'

